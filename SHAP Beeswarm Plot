import pandas as pd
import shap
from lightgbm import LGBMClassifier
import matplotlib.pyplot as plt

# 读取文件
excel_file = pd.ExcelFile('/mnt/20250309.xlsx')

# 获取工作表数据
df = excel_file.parse('Sheet1')

# 定义英文列名映射，删去 "Label" 字样
col_name_mapping = {
    '事故发生时段-标号': 'Accident Time Period',
    '路段信息-标号': 'Road Section Information',
    '天气-标号': 'Weather',
    '道路的线形-标号': 'Road Alignment',
    '最高允许车速(km/h)': 'Maximum Permitted Speed (km/h)',
    '路面材料-标号': 'Pavement Material',
    '道路表面污染-标号': 'Road Surface Contamination',
    '路表潮湿度-标号': 'Road Surface Moisture',
    '路面状况-标号': 'Pavement Condition',
    '驾龄': 'Driving Experience',
    '行人运动状态标号': 'Pedestrian Movement State',
    '车龄': 'Vehicle Age',
    '年龄d': 'Driver Age',
    '司机性别-标号': 'Driver Gender',
    '年龄p': 'Pedestrian Age',
    '行人性别-标号': 'Pedestrian Gender',
    '是否超速-标号': 'Speeding',
    '行人受伤情况': 'Pedestrian Injury Condition'
}

# 重命名列名
df = df.rename(columns=col_name_mapping)

# 提取特征和目标变量
X = df.drop(columns='Pedestrian Injury Condition')
y = df['Pedestrian Injury Condition']

# 构建并训练 LightGBM 模型
model = LGBMClassifier(random_state=2024)
model.fit(X, y)

# 创建 SHAP 解释器
explainer = shap.TreeExplainer(model)

# 计算 SHAP 值
shap_values = explainer.shap_values(X)

# 设置图片清晰度
plt.rcParams['figure.dpi'] = 300

# 设置字体以正常显示英文
plt.rcParams['font.sans-serif'] = ['WenQuanYi Zen Hei']
plt.rcParams['axes.unicode_minus'] = False

# 定义类别名称映射
injury_mapping = {1: 'Possible/Uninjured', 2: 'Emergency/Inpatient', 3: 'Fatal'}

# 检查 shap_values 的类型
if isinstance(shap_values, list):
    # 多分类结果（shap_values 为列表），针对每个类别绘制 SHAP 蜂群图
    num_classes = len(shap_values)
    for i in range(1, num_classes + 1):
        plt.figure()
        shap.summary_plot(shap_values[i - 1], X, plot_type='dot', feature_names=X.columns, show=False)
        plt.title(f'SHAP Beeswarm Plot - {injury_mapping[i]}')
        plt.show()
else:
    # 二分类结果，直接绘制 SHAP 蜂群图
    plt.figure()
    shap.summary_plot(shap_values, X, plot_type='dot', show=False)
    plt.title('SHAP Beeswarm Plot')
    plt.show()
